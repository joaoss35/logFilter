name: Build and Test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - "*"
  release:
    types: [created]

concurrency:
  group: "docker-image"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          architecture: "x64"
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

      - name: Generate repository name
        run: |
          echo "REPOSITORY_PATH=$( echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]' )" >> ${GITHUB_ENV}
          echo "REPOSITORY_SHA=$( echo ${GITHUB_SHA} | cut -c 1-8 )" >> ${GITHUB_ENV}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest tests/app_test.py

      - name: Build and Push
        if: success()
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
          build-args: |
            VERSION=${{ github.event.release.tag_name }}
          tags: |
            ${{ env.REPOSITORY_PATH }}:v${{ github.event.release.tag_name }}
            ${{ env.REPOSITORY_PATH }}:${{ env.REPOSITORY_SHA }}
            ${{ env.REPOSITORY_PATH }}:latest
